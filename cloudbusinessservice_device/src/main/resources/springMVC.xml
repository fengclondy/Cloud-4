<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.2.xsd
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
            http://www.springframework.org/schema/mvc 
            http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.2.xsd 
            http://www.springframework.org/schema/task     
    		http://www.springframework.org/schema/task/spring-task-3.0.xsd ">

	<!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean -->
	<context:component-scan base-package="com.ssitcloud.business"></context:component-scan>

	<!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射 -->
	<mvc:annotation-driven />
	
	<!-- 开启切面编程功能 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!-- 防止返回jsp页面时候被拦截 -->
	<mvc:default-servlet-handler />

	<!-- 读取jdbc,config配置文件,读取多个配置文件需要加上ignore-unresolvable="true",如果有相同的字段，以第一个扫描到的为准-->
	<context:property-placeholder location="classpath:config.properties" ignore-unresolvable="true"/>
	
	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>    <!-- 拦截的url,不要用/**否则静态文件请求也会拦截 -->
<!-- 		不拦截的url,解析头spring-mvc-3.2.xsd要3.2版本以上，
			且<mvc:exclude-mapping/>要写在所有的 <mvc:mapping/>之后， 否则启动报错 -->
			<mvc:exclude-mapping path="/js/**"/>  
			<mvc:exclude-mapping path="/bootstrap**/**"/>  
			<bean class="com.ssitcloud.business.common.interceptor.GlobalInterceptor"></bean>
		</mvc:interceptor>
		 <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 --> 
	</mvc:interceptors>
	
<!-- 	<mvc:resources location="/bootstrap-3.3.5-dist/" mapping="/bootstrap**"/> -->
<!-- 	<mvc:resources location="/js/" mapping="/js/**"/> -->
	
	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <property name="defaultEncoding" value="UTF-8"/>  
        <!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->  
        <!-- <property name="maxUploadSize" value="200000"/>   -->
    </bean> 
	
	<!-- 容器启动时调用方法 -->
	<bean class="com.ssitcloud.business.common.interceptor.InitSystem" /> 
	<bean class="com.ssitcloud.business.common.system.BeanFactoryHelper" /> 
	<bean class="com.ssitcloud.business.common.system.ApplicationContextHolder" /> 
	

	<!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<!-- <property name="prefix" value="/"/> -->
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 定时任务 -->
	<bean id="sendHearbeat" class="com.ssitcloud.business.common.util.SendHearbeatUtil" />  
     
    <task:scheduled-tasks>
       <task:scheduled ref="sendHearbeat" method="sendData" cron="0/30 * * * * ?" />
    </task:scheduled-tasks>
    <!-- 清应用配置接口 -->
	<bean id="appConfigService" class="com.ssitcloud.common.service.impl.AppConfigServiceImpl"/>
</beans>