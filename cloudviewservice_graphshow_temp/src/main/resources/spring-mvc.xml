<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd"
	   xmlns:task="http://www.springframework.org/schema/task">

	<!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean -->
	<context:component-scan base-package="com.ssit" />
	<!-- 启动注解驱动的Spring MVC功能 -->
	<mvc:annotation-driven />
	<!-- 防止返回jsp页面时候被拦截 -->
	<mvc:default-servlet-handler />
	
	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/page/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 全局异常处理 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">500</prop>
			</props>
		</property>
	</bean>

	<bean id="SpringContextUtil" class="com.ssit.util.SpringContextUtil" scope="singleton"></bean>

	<bean id="dataQuartz" class="com.ssit.quartz.DataQuartz"></bean>

	<bean id="initData" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="dataQuartz" />
		<property name="targetMethod" value="initData" />
	</bean>

	<bean id="initDataTigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="initData" />
		<property name="cronExpression" value="0 0 0 * * ?" />
	</bean>

	<bean id="updateDataBy1" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="dataQuartz" />
		<property name="targetMethod" value="updateDataBy1" />
	</bean>

	<!-- 更新的时早上6点到晚上9点的数据 -->
	<bean id="updateDataBy1Tigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="updateDataBy1" />
		<property name="cronExpression" value="0 0/1 5-20 * * ?" />
	</bean>

	<bean id="updateDataBy30" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="dataQuartz" />
		<property name="targetMethod" value="updateDataBy30" />
	</bean>

	<bean id="updateDataBy30Tigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="updateDataBy30" />
		<property name="cronExpression" value="0 0/30 21-23 * * ?" />
	</bean>

	<bean id="updateDataBy30_" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="dataQuartz" />
		<property name="targetMethod" value="updateDataBy30" />
	</bean>

	<bean id="updateDataBy30_Tigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="updateDataBy30_" />
		<property name="cronExpression" value="0 0/30 0-4 * * ?" />
	</bean>

	<bean id="updateCard" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="dataQuartz" />
		<property name="targetMethod" value="updateCard" />
	</bean>

	<bean id="updateCardTigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="updateCard" />
		<property name="cronExpression" value="0 0/30 8-17 * * ?" />
	</bean>

	<bean id="taskStart" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="initDataTigger" />
				<ref bean="updateDataBy1Tigger" />
				<ref bean="updateDataBy30Tigger" />
				<ref bean="updateDataBy30_Tigger" />
				<ref bean="updateCardTigger" />
			</list>
		</property>
	</bean>

</beans>