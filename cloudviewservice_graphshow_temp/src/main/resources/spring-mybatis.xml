<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
       http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
	   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"> 
	
	<!-- <mybatis:scan base-package="com.ssit" /> -->
	
	<!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean -->
	<context:component-scan base-package="com.ssit" />

	<!-- 读取jdbc,config配置文件,读取多个配置文件需要加上ignore-unresolvable="true",如果有相同的字段，以第一个扫描到的为准 -->
	<context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true" />

	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		连接池中保留的最小连接数。
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		连接池中保留的最大连接数。Default: 15
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />
		当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3
		<property name="acquireIncrement" value="${jdbc.acquireIncrement}" />
		<property name="maxStatements" value="${jdbc.maxStatements}" />
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
		每60秒检查所有连接池中的空闲连接。Default: 0
		<property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}" />
		定义在从数据库获取新连接失败后重复尝试的次数。Default: 30
		<property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}" />
		<property name="breakAfterAcquireFailure" value="true" />
		<property name="testConnectionOnCheckout" value="false" />
	</bean> -->
	
	<!-- Hikari Datasource -->  
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"  destroy-method="shutdown">  
		 <property name="driverClassName" value="${jdbc.driverClass}" /> 
		 <property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
		 <property name="username" value="${jdbc.user}" />
		 <property name="password" value="${jdbc.password}" />
		 
		  <!-- 连接只读数据库时配置为true， 保证安全 -->  
		 <property name="readOnly" value="false" />  
		 <!-- 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒 -->  
		 <property name="connectionTimeout" value="30000" />  
		 <!-- 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 -->  
		 <property name="idleTimeout" value="600000" />  
		 <!-- 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';） -->  
		 <property name="maxLifetime" value="1800000" />  
		 <!-- 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count) -->  
		 <property name="maximumPoolSize" value="${jdbc.maxPoolSize}" />  
	</bean>

	<bean id="p6dataSource" class="com.p6spy.engine.spy.P6DataSource">
		<constructor-arg ref="dataSource" />
	</bean>
	
	<!-- 使用spring的事务管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="p6dataSource"></property>
	</bean>

	<!-- 创建sessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="p6dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>

	<!--配置事务service层事务不需要每层service都标注解了 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- *表示匹配任意方法名，add*：匹配add开头的方法 -->
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

</beans>