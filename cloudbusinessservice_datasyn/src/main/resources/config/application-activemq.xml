<?xml version="1.0" encoding="UTF-8"?>
<beans
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:amq="http://activemq.apache.org/schema/core"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans 
  http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
  http://camel.apache.org/schema/spring/
  http://camel.apache.org/schema/spring/camel-spring.xsd
  http://activemq.apache.org/schema/core 
  http://activemq.apache.org/schema/core/activemq-core.xsd">
 	
  <amq:broker brokerName="localhost" useJmx="false" persistent="true">
  	 <amq:persistenceAdapter>
     	<amq:kahaDB directory="../activemq-data" journalMaxFileLength="32mb"/>
   	</amq:persistenceAdapter>
    <amq:transportConnectors>
      <amq:transportConnector name="http" uri="tcp://localhost:61616?trace=true&amp;maxInactivityDurationInitalDelay=30000&amp;connection.AsyncSend=truewireFormat.maxInactivityDuration=0" />
    </amq:transportConnectors>
    <amq:destinations>
    	 <amq:queue id="destination" physicalName="org.apache.activemq.embedded"/>
    </amq:destinations>
  </amq:broker>
  
  
   <!--  ActiveMQ destinations to use  -->
 
 <!-- 
  <amq:connectionFactory id="jmsFactory" brokerURL="vm://localhost"/> -->
  
  <!-- 
  Spring JMS Template
  <bean id="myJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
    <property name="connectionFactory">
      lets wrap in a pool to avoid creating a connection per send
      <bean class="org.springframework.jms.connection.SingleConnectionFactory">
        <property name="targetConnectionFactory">
          <ref bean="jmsFactory"/>
        </property>
      </bean>
    </property>
  </bean>
 
  <bean id="consumerJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
    <property name="connectionFactory" ref="jmsFactory"/>
  </bean>
  
  a sample POJO which uses a Spring JmsTemplate
  <bean id="producer" class="org.apache.activemq.spring.SpringProducer">
    <property name="template">
      <ref bean="myJmsTemplate"></ref>
    </property>
 
    <property name="destination">
      <ref bean="destination" />
    </property>
 
    <property name="messageCount">
      <value>10</value>
    </property>
  </bean>
  
    a sample POJO consumer
  <bean id="consumer" class="org.apache.activemq.spring.SpringConsumer">
    <property name="template" ref="consumerJmsTemplate"/>
    <property name="destination" ref="destination"/>
  </bean> -->
</beans>